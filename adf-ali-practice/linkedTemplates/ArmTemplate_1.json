{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-ali-practice"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GoldLayer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow Gold Layer",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataServing",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DimAirline": {},
									"DimFlight": {},
									"FactBookings": {},
									"sinkAirline": {},
									"sinkFlights": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-15T23:44:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Incremental_Data_Loading_SQltoDatalake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataSQLtoDL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "InitialLookupData",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LatestLookupData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM dbo.FactBookings\nWHERE booking_date > '@{activity('InitialLookupData').output.firstRow.lastload}'\nAND booking_date <= '@{activity('LatestLookupData').output.firstRow.latestload}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SQLtoDL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_datalake_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "InitialLookupData",
						"type": "Lookup",
						"state": "Active",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_lookup",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LatestLookupData",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(booking_date) As latestload\nFROM dbo.FactBookings",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_SQLtoDL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Watermark",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataSQLtoDL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "lastload",
										"value": {
											"value": "@activity('LatestLookupData').output.firstRow.latestload",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_emptyjson_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_lookup",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"vnow": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-08-25T21:52:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_onprem_src_param')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_fs_01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/data transformations')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_dim_airline_src",
								"type": "DatasetReference"
							},
							"name": "DimAirline"
						},
						{
							"dataset": {
								"referenceName": "ds_dimflights_src",
								"type": "DatasetReference"
							},
							"name": "DimFlights"
						},
						{
							"dataset": {
								"referenceName": "ds_dim_passengers_src",
								"type": "DatasetReference"
							},
							"name": "DimPassengers"
						},
						{
							"dataset": {
								"referenceName": "ds_api_src",
								"type": "DatasetReference"
							},
							"name": "DimAirport"
						},
						{
							"dataset": {
								"referenceName": "ds_factBookings_src",
								"type": "DatasetReference"
							},
							"name": "FactBookings"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_storage_file",
								"type": "LinkedServiceReference"
							},
							"name": "sinkDimAirline"
						},
						{
							"linkedService": {
								"referenceName": "ls_storage_file",
								"type": "LinkedServiceReference"
							},
							"name": "sinkDinFlights"
						},
						{
							"linkedService": {
								"referenceName": "ls_storage_file",
								"type": "LinkedServiceReference"
							},
							"name": "sinkDimPassengers"
						},
						{
							"linkedService": {
								"referenceName": "ls_storage_file",
								"type": "LinkedServiceReference"
							},
							"name": "sinkFactBookings"
						},
						{
							"linkedService": {
								"referenceName": "ls_storage_file",
								"type": "LinkedServiceReference"
							},
							"name": "sinkDimAirport"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "selectCols"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "derivedGenderFlagMale"
						},
						{
							"name": "derivedGenderFlagFemale"
						},
						{
							"name": "selectGenderFlag"
						},
						{
							"name": "filterGreater25"
						},
						{
							"name": "castCost"
						},
						{
							"name": "derivedairportName"
						},
						{
							"name": "alterRow1"
						},
						{
							"name": "alterRow2"
						},
						{
							"name": "alterRow3"
						},
						{
							"name": "alterRow4"
						},
						{
							"name": "alterRow5"
						}
					],
					"scriptLines": [
						"source(output(",
						"          airline_id as short,",
						"          airline_name as string,",
						"          country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DimAirline",
						"source(output(",
						"          flight_id as short,",
						"          flight_number as string,",
						"          departure_time as string,",
						"          arrival_time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DimFlights",
						"source(output(",
						"          passenger_id as short,",
						"          full_name as string,",
						"          gender as string,",
						"          age as short,",
						"          country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DimPassengers",
						"source(output(",
						"          airport_id as short,",
						"          airport_name as string,",
						"          city as string,",
						"          country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> DimAirport",
						"source(output(",
						"          booking_id as integer,",
						"          passenger_id as integer,",
						"          flight_id as integer,",
						"          airline_id as integer,",
						"          origin_airport_id as integer,",
						"          destination_airport_id as integer,",
						"          booking_date as date,",
						"          ticket_cost as decimal(10,2),",
						"          flight_duration_mins as integer,",
						"          checkin_status as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> FactBookings",
						"DimAirline derive(country = upper(country)) ~> derivedColumn1",
						"DimFlights select(mapColumn(",
						"          flight_id,",
						"          flight_number,",
						"          departure_timestamp = departure_time,",
						"          arrival_timestamp = arrival_time",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectCols",
						"DimPassengers derive(country = upper(country)) ~> derivedColumn2",
						"derivedColumn2 derive(gender = regexReplace(gender, \"M\", \"Male\")) ~> derivedGenderFlagMale",
						"derivedGenderFlagMale derive(gender = regexReplace(gender, \"F\", \"Female\")) ~> derivedGenderFlagFemale",
						"derivedGenderFlagFemale select(mapColumn(",
						"          passenger_id,",
						"          full_name,",
						"          gender_flag = gender,",
						"          age,",
						"          country",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectGenderFlag",
						"selectGenderFlag filter(age > 25) ~> filterGreater25",
						"FactBookings cast(output(",
						"          ticket_cost as integer",
						"     ),",
						"     errors: true) ~> castCost",
						"DimAirport derive(airport_name = lower(airport_name)) ~> derivedairportName",
						"derivedColumn1 alterRow(upsertIf(1>0)) ~> alterRow1",
						"selectCols alterRow(upsertIf(1==1)) ~> alterRow2",
						"filterGreater25 alterRow(upsertIf(1==1)) ~> alterRow3",
						"castCost alterRow(upsertIf(1==1)) ~> alterRow4",
						"derivedairportName alterRow(upsertIf(1==1)) ~> alterRow5",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'silver',",
						"     folderPath: 'DimAirline',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable: false,",
						"     insertable: false,",
						"     updateable: false,",
						"     upsertable: true,",
						"     keys:['airline_id'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkDimAirline",
						"alterRow2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'silver',",
						"     folderPath: 'DimFlights',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable: false,",
						"     insertable: false,",
						"     updateable: false,",
						"     upsertable: true,",
						"     keys:['flight_id'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkDinFlights",
						"alterRow3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'silver',",
						"     folderPath: 'DimPassengers',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable: false,",
						"     insertable: false,",
						"     updateable: false,",
						"     upsertable: true,",
						"     keys:['passenger_id'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkDimPassengers",
						"alterRow4 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'silver',",
						"     folderPath: 'FactBookings',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable: false,",
						"     insertable: false,",
						"     updateable: false,",
						"     upsertable: true,",
						"     keys:['booking_id'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkFactBookings",
						"alterRow5 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'silver',",
						"     folderPath: 'DimAirport',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable: false,",
						"     insertable: false,",
						"     updateable: false,",
						"     upsertable: true,",
						"     keys:['airport_id'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkDimAirport"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamic_DP_onPrem_data_ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.files",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "MigrationDataOnPrem",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_onprem_src_param",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@item().file_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_onpremadls_sink_param",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@item().file_name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"files": {
						"type": "array",
						"defaultValue": [
							{
								"file_name": "DimAirline.csv"
							},
							{
								"file_name": "DimFlight.csv"
							},
							{
								"file_name": "DimPassenger.csv"
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-08-24T21:07:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_onprem_src_param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamic_DP_onPrem_data_ingestion_Dynamic_mapping')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.files",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "MigrationDataOnPrem",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"value": "@if(\r\n    equals(item().file_name, 'DimAirline.csv'),\r\n    pipeline().parameters.p_mapping_Airline,\r\n    if(\r\n        equals(item().file_name, 'DimFlight.csv'),\r\n        pipeline().parameters.p_mapping_Flight,\r\n        pipeline().parameters.p_mapping_passengers\r\n    )\r\n)\r\n",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "ds_onprem_src_param",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@item().file_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_onpremadls_sink_param",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@item().file_name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"files": {
						"type": "array",
						"defaultValue": [
							{
								"file_name": "DimAirline.csv"
							},
							{
								"file_name": "DimFlight.csv"
							},
							{
								"file_name": "DimPassenger.csv"
							}
						]
					},
					"p_mapping_Airline": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "airline_id",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "airline_id",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "airline_name",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "airline_name",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "country",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "country",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					},
					"p_mapping_Flight": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "flight_id",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "flight_id",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "flight_number",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "flight_number",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "departure_time",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "departure_time",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "arrival_time",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "arrival_time",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					},
					"p_mapping_passengers": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "passenger_id",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "passenger_id",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "full_name",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "full_name",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "gender",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "gender",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "age",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "age",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "country",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "country",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-07T13:14:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_onprem_src_param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SilverLayer_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow Silver Layer",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "data transformations",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DimAirline": {},
									"DimFlights": {},
									"DimPassengers": {},
									"DimAirport": {},
									"FactBookings": {},
									"sinkDimAirline": {},
									"sinkDinFlights": {},
									"sinkDimPassengers": {},
									"sinkFactBookings": {},
									"sinkDimAirport": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-07T21:24:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/data transformations')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parent_pipline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_onPrem_data_Ingestion",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Dynamic_DP_onPrem_data_ingestion_Dynamic_mapping",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"files": {
									"value": "@pipeline().parameters.files",
									"type": "Expression"
								},
								"p_mapping_Airline": {
									"value": "@pipeline().parameters.p_mapping_Airline",
									"type": "Expression"
								},
								"p_mapping_Flight": {
									"value": "@pipeline().parameters.p_mapping_Flight",
									"type": "Expression"
								},
								"p_mapping_passengers": {
									"value": "@pipeline().parameters.p_mapping_passengers",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute_DP_API_Ingestion",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_onPrem_data_Ingestion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DP_API_ingestion",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"files": {
						"type": "array",
						"defaultValue": [
							{
								"file_name": "DimAirline.csv"
							},
							{
								"file_name": "DimFlight.csv"
							},
							{
								"file_name": "DimPassenger.csv"
							}
						]
					},
					"p_mapping_Airline": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "airline_id",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "airline_id",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "airline_name",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "airline_name",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "country",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "country",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					},
					"p_mapping_Flight": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "flight_id",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "flight_id",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "flight_number",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "flight_number",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "departure_time",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "departure_time",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "arrival_time",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "arrival_time",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					},
					"p_mapping_passengers": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "passenger_id",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "passenger_id",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "full_name",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "full_name",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "gender",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "gender",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "age",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "age",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "country",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "country",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-07T13:14:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Dynamic_DP_onPrem_data_ingestion_Dynamic_mapping')]"
			]
		}
	]
}